// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel BlendTexture

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> output;
Texture2D backgroundTexture;
Texture2D foregroundTexture;
uint2 foregroundTextureDimensions;
uint2 foregroundTexturePosition;

[numthreads(8,8,1)]
void BlendTexture(uint3 id : SV_DispatchThreadID)
{
    float4 background = backgroundTexture[id.xy].rgba;
    uint2 pixelPosition = id.xy - foregroundTexturePosition.xy;
    float4 foreground = float4(0, 0, 0, 0);

    if(0 <= pixelPosition.x && pixelPosition.x <= foregroundTextureDimensions.x && 0 <= pixelPosition.y && pixelPosition.y <= foregroundTextureDimensions.y) 
    {
        foreground = foregroundTexture[pixelPosition];
    }

    output[id.xy] = background + foreground;
}